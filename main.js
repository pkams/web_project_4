!function(){"use strict";var e={d:function(t,n){for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}};function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}e.d({},{g1:function(){return j},pf:function(){return I},oB:function(){return g},MH:function(){return S}});var n=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.popup=document.querySelector(t)}var n,r;return n=e,(r=[{key:"open",value:function(){this.popup.classList.add("popup_opened")}},{key:"close",value:function(){this.popup.classList.remove("popup_opened")}},{key:"_handleEscClose",value:function(){document.addEventListener("keydown",function(e){"Escape"===e.key&&this.close(this.popup)}.bind(this))}},{key:"setEventListeners",value:function(){var e=this;j.forEach((function(t){t.addEventListener("click",(function(){e.close(t.parentElement)}))})),this._handleEscClose(),this.popup.querySelector(".popup__close").addEventListener("click",(function(){e.close()}))}}])&&t(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}();function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function u(e,t){if(t&&("object"===r(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var c=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(s,e);var t,n,r,c,l=(r=s,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(r);if(c){var n=a(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return u(this,e)});function s(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,s),(t=l.call(this,e)).popup=document.querySelector(e),t}return t=s,(n=[{key:"open",value:function(e,t){var n=this.popup.querySelector(".popup__image"),r=this.popup.querySelector(".popup__image-name");n.src=t,r.textContent=e,this.popup.classList.add("popup_opened")}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),s}(n);function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t,n,r,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=t,this.link=n,this._cardSelector=r,this.index=o,this.popupElement=new c(".popup_view-image")}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"_buildCardElement",value:function(){return this.cardElement.querySelector(".card__text-title").textContent=this.name,this.cardElement.querySelector(".card__image").src=this.link,this.cardElement}},{key:"_likeCardButton",value:function(){this.classList.toggle("card__like-button_clicked")}},{key:"_deleteCardButton",value:function(){g.splice(this.index,1),I.renderItems()}},{key:"_openImage",value:function(){this.popupElement.open(this.name,this.link)}},{key:"_setEventListener",value:function(){var e=this;this.popupElement.setEventListeners();var t=this.cardElement.querySelector(".card__trash-button"),n=this.cardElement.querySelector(".card__like-button"),r=this.cardElement.querySelector(".card__image"),o=this.popupElement.popup.querySelector(".popup__close_view-image");t.addEventListener("click",this._deleteCardButton.bind(this)),n.addEventListener("click",this._likeCardButton),r.addEventListener("click",this._openImage.bind(this)),o.addEventListener("click",(function(){e.popupElement.close()}))}},{key:"generateCard",value:function(){return this.cardElement=this._getTemplate(),this.cardElement=this._buildCardElement(),this._setEventListener(),this.cardElement}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"_clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(){var e=this;this._clear(),this._items.slice(0,6).forEach((function(t,n){var r=e._renderer(t,n);e._container.append(r)}))}},{key:"addItem",value:function(e){this._container.append(e)}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var y=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.formValidatorConfigObj=t,this.formElement=n}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t,n,r){var o=t.querySelector(".".concat(n.id,"-error"));n.classList.add(e.inputErrorClass),o.textContent=r,o.classList.add(e.errorClass)}},{key:"_hideInputError",value:function(e,t,n){var r=t.querySelector(".".concat(n.id,"-error"));n.classList.remove(e.inputErrorClass),r.classList.remove(e.errorClass),r.textContent=""}},{key:"_checkInputValidity",value:function(e,t,n){n.validity.valid?this._hideInputError(e,t,n):this._showInputError(e,t,n,n.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleSubmitButtonState",value:function(e,t,n){this._hasInvalidInput(t)?n.classList.add(e.inactiveButtonClass):n.classList.remove(e.inactiveButtonClass)}},{key:"_setEventListeners",value:function(e,t){var n=this,r=Array.from(t.querySelectorAll(e.inputSelector)),o=t.querySelector(e.submitButtonSelector);r.forEach((function(i){i.addEventListener("input",(function(){n._checkInputValidity(e,t,i),n._toggleSubmitButtonState(e,r,o)}))}))}},{key:"enableValidation",value:function(){this.formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners(this.formValidatorConfigObj,this.formElement)}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(e,t){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},m(e,t)}function b(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e)).popup=document.querySelector(e),t}return t=u,(n=[{key:"_getInputValues",value:function(){return this.popup.querySelectorAll(".popup__form-input")}},{key:"setEventListeners",value:function(){var e=this;j.forEach((function(t){t.addEventListener("click",(function(){e.close(t.parentElement)}))})),this._handleEscClose(),this.popup.querySelector(".popup__close").addEventListener("click",(function(){e.close()})),this.popup.addEventListener("submit",(function(e){e.preventDefault()})),new y(S,this.popup).enableValidation()}},{key:"close",value:function(){var e=this._getInputValues();e[0].value="",e[1].value="",this.popup.classList.remove("popup_opened")}}])&&h(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(n);function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var w=function(){function e(t){var n=t.nameSelector,r=t.jobSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._job=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name,job:this._job}}},{key:"setUserInfo",value:function(e,t){this._name.value=e.value,this._job.value=t.value}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),g=[{name:"Vale de Yosemite",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lago Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Montanhas Carecas",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Parque Nacional da Vanoise ",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],S={formSelector:".popup__form",inputSelector:".popup__form-input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_inactive",inputErrorClass:"popup__form-input_type_error",errorClass:"popup__form-input_error_active"},j=document.querySelectorAll(".popup__background"),O=document.querySelector(".profile__edit-button"),L=document.querySelector(".profile__add-button"),C=document.querySelector(".popup__save-button"),q=document.querySelector(".popup__add-card-save-button"),P=new w({nameSelector:".profile__name",jobSelector:".profile__job"}),I=new f({items:g,renderer:function(e,t){return new s(e.name,e.link,"#card-template",t).generateCard()}},".elements"),x=new E(".popup"),T=new E(".popup_add-card");x.setEventListeners(),T.setEventListeners(),O.addEventListener("click",(function(e){e.preventDefault(),x.open();var t=P.getUserInfo(),n=document.querySelector("#name"),r=document.querySelector("#job");n.value=t.name.innerText,r.value=t.job.innerText})),L.addEventListener("click",(function(e){e.preventDefault(),T.open()})),C.addEventListener("click",(function(e){e.preventDefault();var t=P.getUserInfo(),n=x._getInputValues();t.name.innerText=n[0].value,t.job.innerText=n[1].value})),q.addEventListener("click",(function(e){e.preventDefault();var t=T._getInputValues();g.unshift({name:t[0].value,link:t[1].value}),t[0].value="",t[1].value="",I.renderItems(),T.setEventListeners()})),I.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,